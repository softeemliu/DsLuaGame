const char* load_config =
"local result = {}\n"
"local function getenv(name) return assert(os.getenv(name), 'os.getenv() failed: ' .. name) end\n"
"local sep = package.config:sub(1,1)\n"
"local current_path = '.'..sep\n"
"local function include(filename)\n"
"   local last_path = current_path\n"
"   local path, name = filename:match('(.*'..sep..')([^'..sep..']+)$')\n"
"   if path then\n"
"       if path:sub(1,1) == sep then\n"
"           current_path = path\n"
"       else\n"
"           current_path = current_path .. path\n"
"       end\n"
"   else\n"
"       name = filename\n"
"   end\n"
"   local f = assert(io.open(current_path .. name))\n"
"   local code = assert(f:read '*a')\n"
"   f:close()\n"
"   code = code:gsub('%$([%w_]+)', getenv)\n"  // ¼ò»¯Æ¥ÅäÄ£Ê½
"   local chunk, err = load(code, '@'..filename, 't', result)\n"
"   if not chunk then error(err) end\n"
"   chunk()\n"
"   current_path = last_path\n"
"end\n"
"setmetatable(result, { __index = { include = include } })\n"
"local config_name = ...\n"
"include(config_name)\n"
"return result\n";